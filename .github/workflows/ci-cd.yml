name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  e2e-test:
    needs: install
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Run E2E Test
        run: echo "Hello E2E !"

  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push' && 
      !startsWith(github.event.head_commit.message, 'chore: bump version')
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Configure Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
      - name: Create Release
        id: release
        run: |
          VERSION=$(npm version patch --no-git-tag-version)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${VERSION}"
          git tag -a "${VERSION}" -m "Release ${VERSION}"
          git push origin main
          git push origin "${VERSION}"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release.outputs.version }}
          name: Release ${{ steps.release.outputs.version }}
          body: |
            Release ${{ steps.release.outputs.version }}
            Changes:
            - Automated release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }} 